include "../../akka.conf"

##################################################################
# Simulation Parameters
##################################################################
simona.simulationName = "DE0_0"

##################################################################
# Time Parameters
##################################################################
simona.time.startDateTime = "2012-01-01 00:00:00"
simona.time.endDateTime = "2012-12-31 23:59:00"
simona.time.schedulerReadyCheckWindow = 3600
simona.time.stopOnFailedPowerFlow = true

##################################################################
# Input Parameters
##################################################################
simona.input.primary.csvParams = {
  directoryPath: "input/grids/DE0_0/input"
  timePattern: "yyyy-MM-dd'T'HH:mm'Z'"
  csvSep: ","
  isHierarchic: false
}
simona.input.grid.datasource.id = "csv"
simona.input.grid.datasource.csvParams = {
  directoryPath: "input/grids/DE0_0/input"
  csvSep: ","
  isHierarchic: false
}

simona.input.weather.datasource = {
  scheme = "icon"
  sqlParams = {
      jdbcUrl:  "jdbc:postgresql://129.217.187.205:5431/europe-weather"
      userName: "postgres"
      password: "postgres"
      tableName: "weathervalue"
  }
  coordinateSource {
    csvParams = {
      directoryPath: "/input/coordinates"
      isHierarchic: false
      csvSep: ","
  }
}

}

##################################################################
# Output Parameters
##################################################################
simona.output.base.dir = "input/grids/DE0_0/output"
simona.output.base.addTimestampToOutputDir = true

simona.output.sink.csv {
  fileFormat = ".csv"
  filePrefix = ""
  fileSuffix = ""
}

simona.output.grid = {
  notifier = "grid"
  nodes = false
  lines = false
  switches = false
  transformers2w = false
  transformers3w = false
}
simona.output.participant.defaultConfig = {
  notifier = "default"
  powerRequestReply = false
  simulationResult = true
}
simona.output.participant.individualConfigs = [
  {
    notifier = "pv"
    powerRequestReply = false
    simulationResult = true
  },
  {
    notifier = "wec"
    powerRequestReply = false
    simulationResult = true
  },
  {
    notifier = "evcs"
    powerRequestReply = false
    simulationResult = true
  },
  {
    notifier = "ev"
    powerRequestReply = false
    simulationResult = false
  }
    ]
simona.output.thermal.defaultConfig = {
  notifier = "default"
  powerRequestReply = false
  simulationResult = true
}
simona.output.thermal.individualConfigs = []

simona.output.flex = false

##################################################################
# Runtime Configuration // todo refactor as this naming is misleading and partly unneeded
##################################################################
simona.runtime.selected_subgrids = []
simona.runtime.selected_volt_lvls = []

simona.runtime.participant.load = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
    modelBehaviour = "random"
    reference = "energy"
  }
  individualConfigs = []
}

simona.runtime.participant.fixedFeedIn = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.pv = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.wec = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.evcs = {
  defaultConfig = {
    lowestEvSoc = 0.5
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.storage = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.em = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}

simona.runtime.participant.hp = {
  defaultConfig = {
    calculateMissingReactivePowerWithModel = false
    uuids = ["default"]
    scaling = 1.0
  }
  individualConfigs = []
}




##################################################################
# Mobility simulator parameters
##################################################################

mobsim.input {
    grid.name = "DE0_0"
    grid.source = {
      path = "input/grids/DE0_0/input"
      colSep = ","
    }
    mobility.source = {
      path = "/input/mobilitySimulatorMid"
      colSep = ","
    }
    evInputSource= {
      source = {
        path = "input/grids/DE0_0/input"
        colSep = ","
      }
      homePoiMapping = {
        path = "/input/mobilitySimulatorMid/poi/DE0_0/poi_mapping.csv"
        colSep = ","
      }
    }
}

mobsim.simulation {
    name = "tbw"
    startDate = "2012-01-01 00:00:00"
    targetHomeChargingShare = 1.0
    numberOfEv = 100
    round15 = true
    averageCarUsage = 0.75
    location.maxDistanceToHomeChargingStation = 25000000000000000000
    location.maxDistanceToChargingStation = 1
}


##################################################################
# Event Configuration
##################################################################
simona.event.listener = []

##################################################################
# Grid Configuration
##################################################################

simona.gridConfig.refSystems = [
  {sNom = "100 kVA", vNom = "0.4 kV", voltLvls = [{id = "NS", vNom = "0.4 kV"}]},
  {sNom = "60 MVA", vNom = "20 kV", voltLvls = [{id = "MS", vNom = "20 kV"}]},
  {sNom = "600 MVA", vNom = "110 kV", voltLvls = [{id = "HS", vNom = "110 kV"}]},
  {sNom = "1000 MVA", vNom = "380 kV", voltLvls = [{id = "HoeS", vNom = "380 kV"}]}
]

##################################################################
# Power Flow Configuration
##################################################################
simona.powerflow.maxSweepPowerDeviation = 1E-5 // the maximum allowed deviation in power between two sweeps, before overall convergence is assumed
simona.powerflow.newtonraphson.epsilon = [1E-12]
simona.powerflow.newtonraphson.iterations = 50
simona.powerflow.resolution = "400d"
